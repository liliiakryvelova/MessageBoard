// <auto-generated />
using System;
using MessageBoard.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MessageBoard.Solution.Migrations
{
    [DbContext(typeof(MessageBoardContext))]
    [Migration("20220906034804_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MessageBoard.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Home"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Work"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Before work"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "After work"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Before school"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "After school"
                        });
                });

            modelBuilder.Entity("MessageBoard.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("MessageId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            MessageId = 1,
                            CategoryId = 3,
                            Date = new DateTime(2022, 9, 5, 20, 48, 4, 125, DateTimeKind.Local).AddTicks(2827),
                            Description = "Go for a walk outside"
                        },
                        new
                        {
                            MessageId = 2,
                            CategoryId = 3,
                            Date = new DateTime(2022, 9, 5, 20, 48, 4, 125, DateTimeKind.Local).AddTicks(3542),
                            Description = "Walk with dog"
                        },
                        new
                        {
                            MessageId = 3,
                            CategoryId = 2,
                            Date = new DateTime(2022, 9, 5, 20, 48, 4, 125, DateTimeKind.Local).AddTicks(3552),
                            Description = "Clean the room"
                        },
                        new
                        {
                            MessageId = 4,
                            CategoryId = 4,
                            Date = new DateTime(2022, 9, 5, 20, 48, 4, 125, DateTimeKind.Local).AddTicks(3554),
                            Description = "Read the book"
                        },
                        new
                        {
                            MessageId = 5,
                            CategoryId = 2,
                            Date = new DateTime(2022, 9, 5, 20, 48, 4, 125, DateTimeKind.Local).AddTicks(3557),
                            Description = "Wash the dishes"
                        },
                        new
                        {
                            MessageId = 6,
                            CategoryId = 1,
                            Date = new DateTime(2022, 9, 5, 20, 48, 4, 125, DateTimeKind.Local).AddTicks(3559),
                            Description = "Prepare the dinner"
                        });
                });

            modelBuilder.Entity("MessageBoard.Models.Message", b =>
                {
                    b.HasOne("MessageBoard.Models.Category", null)
                        .WithMany("Messages")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MessageBoard.Models.Category", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
